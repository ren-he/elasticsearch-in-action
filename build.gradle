// buildscript 代码块中脚本优先执行
buildscript {
	// ext 用于定义动态属性
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}

	// 使用了 Maven 的中央仓库。这里改为自定义的镜像库
	repositories {
		//mavenCentral()
		maven {
			url 'http://maven.aliyun.com/nexus/content/groups/public'
		}
	}

	// 依赖关系
	dependencies {
		// classpath 声明说明了在执行其余的脚本时，classLoader 可以使用这些依赖项
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

// 使用插件
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// 指定了生成的打包的文件名称
group = 'com.rh.spring.boot.blog'

// 指定了生成的打包的文件版本
version = '1.0.0'

// 指定编译 .java 文件的 JDK 版本
sourceCompatibility = 1.8

// 默认使用 Maven 的中央仓库。这里改为自定义的镜像库
repositories {
	//mavenCentral()
	maven {
		url 'http://maven.aliyun.com/nexus/content/groups/public'
	}
}

// 依赖关系
dependencies {
	// 该依赖对于编译发行是必须的
	compile('org.springframework.boot:spring-boot-starter-web')

    // 添加 Spring Data Elasticsearch 的依赖
    compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')

    // 添加 JNA 的依赖
    compile('net.java.dev.jna:jna:4.3.0')

	// 该依赖对于编译测试是必须的，默认包含编译产品依赖和编译时依赖
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
